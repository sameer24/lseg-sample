{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Loginpage.js","components/Gridag.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","handleClick","e","setState","defineProperty","target","name","value","preventDefault","searchText","params","id","state","searchtext","SEARCHTEXT","alert","react_default","a","createElement","className","href","Component","HomePage","Navbar","class","LoginPage","username","password","error","handlePassChange","handleUserChange","handleSubmit","dismissError","evt","history","push","onSubmit","FormGroup","role","onClick","type","data-dismiss","aria-label","aria-hidden","FormControl","placeholder","required","autoFocus","data-test","withRouter","Gridag","onButtonClick","selectedDataStringPresentation","gridApi","getSelectedNodes","map","node","data","athlete","gold","join","concat","columnDefs","createColumnDefs","rowData","createRowData","age","country","year","date","sport","silver","bronze","total","headerName","field","checkboxSelection","nextProps","newPosts","console","log","posts","unshift","_this2","style","height","width","main","onGridReady","api","enableSorting","floatingFilter","enableFilter","rowSelection","frameworkComponents","App","BrowserRouter","Route","path","exact","render","Loginpage","_ref","match","Home","_ref2","components_Gridag","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a37e4cc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n//import { NavLink } from 'react-router-dom'\r\n\r\n//import { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        const searchText = {\r\n            params: {\r\n                id: this.state.searchtext,\r\n            }\r\n        }\r\n        this.props.SEARCHTEXT(searchText);\r\n        alert(\"your form was submitted!\" + this.state.searchtext);\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark static-top\">\r\n                <a className=\"navbar-brand\" href=\"/\">LSEG</a>\r\n                <button className=\"btn btn-link btn-sm text-white order-1 order-sm-0\" id=\"sidebarToggle\" href=\"#\">\r\n                    <i className=\"fas fa-bars\"></i>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"/gridag\">Grid AG <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\n\r\n//import { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\n\r\n//import { BrowserRouter as Router, Route, Switch, Link, NavLink } from 'react-router-dom'\r\nimport NavBar from \"./Navbar\"\r\n\r\n//import './HomePage.css';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div id=\"wrapper\">\r\n                <ul class=\"sidebar navbar-nav\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\" href=\"/home\">\r\n                            <i class=\"fas fa-fw fa-tachometer-alt\"></i>\r\n                            <span>Dashboard</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl, Button } from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\nclass LoginPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: '',\r\n        };\r\n\r\n        this.handlePassChange = this.handlePassChange.bind(this);\r\n        this.handleUserChange = this.handleUserChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.dismissError = this.dismissError.bind(this);\r\n    }\r\n\r\n    dismissError() {\r\n        this.setState({ error: '' });\r\n    }\r\n\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        if (!this.state.username) {\r\n            return this.setState({ error: 'Username is required' });\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            return this.setState({ error: 'Password is required' });\r\n        }\r\n\r\n        if (this.state.username == 'synechron' && this.state.password == 'synechron') {\r\n            this.props.history.push('/home');\r\n            return this.setState({ error: '' });\r\n        } else {\r\n            return this.setState({ error: 'UserName and Password not matching' });\r\n        }\r\n\r\n    }\r\n\r\n    handleUserChange(evt) {\r\n        this.setState({\r\n            username: evt.target.value,\r\n        });\r\n    };\r\n\r\n    handlePassChange(evt) {\r\n        this.setState({\r\n            password: evt.target.value,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // NOTE: I use data-attributes for easier E2E testing\r\n        // but you don't need to target those (any css-selector will work)\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row no-gutter\">\r\n                        <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n                        <div className=\"col-md-8 col-lg-6\">\r\n                            <div className=\"login d-flex align-items-center py-5\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-9 col-lg-8 mx-auto\">\r\n                                            <h3 className=\"login-heading mb-4\">Login</h3>\r\n                                            <form onSubmit={this.handleSubmit}>\r\n                                                <FormGroup>\r\n                                                    {\r\n                                                        this.state.error &&\r\n                                                        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" onClick={this.dismissError}>\r\n                                                            {this.state.error}\r\n                                                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={this.dismissError}>\r\n                                                                <span aria-hidden=\"true\">&times;</span>\r\n                                                            </button>\r\n                                                        </div>\r\n\r\n\r\n                                                    }\r\n\r\n                                                    <FormControl\r\n                                                        type=\"text\"\r\n                                                        value={this.state.username}\r\n                                                        placeholder=\"Login ID\"\r\n                                                        onChange={this.handleUserChange}\r\n                                                        className=\"form-control form-label-group\" required autoFocus\r\n                                                    />\r\n\r\n\r\n\r\n                                                    <FormControl\r\n                                                        type=\"password\"\r\n                                                        value={this.state.password}\r\n                                                        placeholder=\"Password\"\r\n                                                        onChange={this.handlePassChange}\r\n                                                        className=\"form-control form-label-group\"\r\n                                                        required\r\n                                                    />\r\n                                                    {/* <input type=\"password\" data-test=\"password\" value={this.state.password} onChange={this.handlePassChange} className=\"form-control\" placeholder=\"Password\" required />\r\n                                                    <label htmlFor=\"inputPassword\">Password</label> */}\r\n\r\n\r\n\r\n                                                    <button className=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\" type=\"submit\" data-test=\"submit\" >Log In</button>\r\n                                                </FormGroup>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginPage);","import React, { Component } from 'react';\n//import PropTypes from 'prop-types';\n//import { connect } from 'react-redux';\n// import {fetchGrid} from '../actions/postActions';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport NavBar from \"./Navbar\";\n\nimport './css/all.css';\n\nclass Gridag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columnDefs: this.createColumnDefs(),\n            rowData: this.createRowData()\n        }\n    }\n    createRowData() {\n        return [\n            { \"athlete\": \"Michael Phelps\", \"age\": 23, \"country\": \"United States\", \"year\": 2008, \"date\": \"24/08/2008\", \"sport\": \"Swimming\", \"gold\": 8, \"silver\": 0, \"bronze\": 0, \"total\": 8 },\n            { \"athlete\": \"Michael Phelps\", \"age\": 19, \"country\": \"United States\", \"year\": 2004, \"date\": \"29/08/2004\", \"sport\": \"Swimming\", \"gold\": 6, \"silver\": 0, \"bronze\": 2, \"total\": 8 },\n            { \"athlete\": \"Michael Phelps\", \"age\": 27, \"country\": \"United States\", \"year\": 2012, \"date\": \"12/08/2012\", \"sport\": \"Swimming\", \"gold\": 4, \"silver\": 2, \"bronze\": 0, \"total\": 6 },\n            { \"athlete\": \"Natalie Coughlin\", \"age\": 25, \"country\": \"United States\", \"year\": 2008, \"date\": \"24/08/2008\", \"sport\": \"Swimming\", \"gold\": 1, \"silver\": 2, \"bronze\": 3, \"total\": 6 },\n            { \"athlete\": \"Aleksey Nemov\", \"age\": 24, \"country\": \"Russia\", \"year\": 2000, \"date\": \"01/10/2000\", \"sport\": \"Gymnastics\", \"gold\": 2, \"silver\": 1, \"bronze\": 3, \"total\": 6 },\n            { \"athlete\": \"Alicia Coutts\", \"age\": 24, \"country\": \"Australia\", \"year\": 2012, \"date\": \"12/08/2012\", \"sport\": \"Swimming\", \"gold\": 1, \"silver\": 3, \"bronze\": 1, \"total\": 5 },\n            { \"athlete\": \"Missy Franklin\", \"age\": 17, \"country\": \"United States\", \"year\": 2012, \"date\": \"12/08/2012\", \"sport\": \"Swimming\", \"gold\": 4, \"silver\": 0, \"bronze\": 1, \"total\": 5 },\n            { \"athlete\": \"Ryan Lochte\", \"age\": 27, \"country\": \"United States\", \"year\": 2012, \"date\": \"12/08/2012\", \"sport\": \"Swimming\", \"gold\": 2, \"silver\": 2, \"bronze\": 1, \"total\": 5 },\n            { \"athlete\": \"Allison Schmitt\", \"age\": 22, \"country\": \"United States\", \"year\": 2012, \"date\": \"12/08/2012\", \"sport\": \"Swimming\", \"gold\": 3, \"silver\": 1, \"bronze\": 1, \"total\": 5 },\n            { \"athlete\": \"Natalie Coughlin\", \"age\": 21, \"country\": \"United States\", \"year\": 2004, \"date\": \"29/08/2004\", \"sport\": \"Swimming\", \"gold\": 2, \"silver\": 2, \"bronze\": 1, \"total\": 5 }\n        ]\n    }\n    createColumnDefs() {\n        return [\n            { headerName: \"Athlete\", field: \"athlete\" },\n            { headerName: \"Country\", field: \"country\" },\n            { headerName: \"Age\", field: \"age\", checkboxSelection: true },\n            { headerName: \"Date\", field: \"date\" },\n            { headerName: \"Sport\", field: \"sport\" },\n            { headerName: \"Gold\", field: \"gold\" },\n            { headerName: \"Silver\", field: \"silver\" },\n            { headerName: \"Bronze\", field: \"bronze\" },\n            { headerName: \"Total\", field: \"total\" }\n        ]\n    }\n\n    // onGridReady(params) {\n    //     this.gridApi = params.api;\n    //     this.columnApi = params.columnApi;\n    //     this.gridApi.sizeColumnsToFit();\n    // }\n\n    componentWillMount() {\n        // this.props.fetchGrid();\n\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.newPosts) {\n            console.log(nextProps.newPosts);\n            this.props.posts.unshift(nextProps.newPosts.data);\n        }\n    }\n    onButtonClick = e => {\n        const selectedNodes = this.gridApi.getSelectedNodes()\n        const selectedData = selectedNodes.map(node => node.data)\n        const selectedDataStringPresentation = selectedData.map(node => node.athlete + '- Gold ' + node.gold).join(', ')\n        alert(`Selected nodes: ${selectedDataStringPresentation}`)\n    }\n\n    render() {\n        // const postItems = this.props.posts.map(post =>(\n        //     <div >\n        //         <h3>{post.athlete}</h3>\n        //         <p>{post.country}</p>\n        //     </div>\n        // ));\n        // return (\n        //     <div>\n        //         <h1>Posts</h1>\n        //         {postItems}\n        //     </div>\n        // )\n        //const postItems = this.props.posts\n        return (\n\n            <div>\n                <NavBar />\n                <div id=\"wrapper\">\n                    <ul class=\"sidebar navbar-nav\">\n                        <li class=\"nav-item active\">\n                            <a class=\"nav-link\" href=\"/home\">\n                                <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n                                <span>Dashboard</span>\n                            </a>\n                        </li>\n                        <li class=\"nav-item active\">\n                            <a class=\"nav-link\" href=\"/gridag\">\n                                <i class=\"fas fa-fw fa-table\"></i>\n                                <span>Grid AG</span>\n                            </a>\n                        </li>\n                    </ul>\n                    <div className=\"container-fluid\">\n\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                <i className=\"fas fa-chart-area\"></i>\n                                 Work In Progress</div>\n                            <div className=\"card-body\">\n                                <div class=\"table-responsive\">\n                                    <div className=\"ag-theme-balham\"\n                                        style={{\n                                            height: '200px',\n                                            width: '100%'\n                                        }}\n                                    >\n                                        <AgGridReact\n                                            onGridReady={params => this.gridApi = params.api}\n                                            enableSorting={true}\n                                            floatingFilter={false}\n                                            enableFilter={true}\n                                            rowSelection=\"multiple\"\n                                            columnDefs={this.state.columnDefs}\n                                            rowData={this.state.rowData}\n                                            /* this is where we provide custom components */\n                                            frameworkComponents={this.state.frameworkComponents}\n                                        >\n                                        </AgGridReact>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-footer small text-muted\">Updated yesterday at 11:59 PM</div>\n                        </div>\n\n                        {/* <button onClick={this.onButtonClick} className=\"btn btn-primary\">Get selected rows</button> */}\n                        <div class=\"card mb-3\">\n                            <div class=\"card-header\">\n                                <i class=\"fas fa-chart-area\"></i>\n                                       Edit In Progress</div>\n                            <div class=\"card-body\">\n                                <div class=\"table-responsive\">\n                                    <div\n                                        className=\"ag-theme-balham\"\n                                        style={{\n                                            height: '200px',\n                                            width: '100%'\n                                        }}\n                                    >\n\n                                        <AgGridReact\n                                            onGridReady={params => this.gridApi = params.api}\n                                            enableSorting={true}\n                                            floatingFilter={false}\n                                            enableFilter={true}\n                                            rowSelection=\"multiple\"\n                                            columnDefs={this.state.columnDefs}\n                                            rowData={this.state.rowData}\n                                            /* this is where we provide custom components */\n                                            frameworkComponents={this.state.frameworkComponents}\n                                        >\n                                        </AgGridReact>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-footer small text-muted\">Updated yesterday at 11:59 PM</div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// const mapStateToProps = state =>({\n//     posts : state.posts.items,\n//     newPosts: state.posts.item\n// })\n\nexport default (Gridag);","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Switch, Link, NavLink } from 'react-router-dom'\n//import NavBar from \"./components/Navbar\";\nimport HomePage from \"./components/Home\"\nimport LoginPage from \"./components/Loginpage\"\nimport GridAG from './components/Gridag'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"\">\n\n          <Route path=\"/\" exact render={() => (\n            <div>\n              <LoginPage />\n            </div>\n          )} />\n          <Route path=\"/home\" render={({ match }) => (\n            <HomePage /> \n          )} />\n          <Route path=\"/gridag\" render={({ match }) => (\n            <GridAG />\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../node_modules/bootstrap/dist/js/bootstrap'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}